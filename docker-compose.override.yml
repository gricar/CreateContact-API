services:
  messagebroker:
    container_name: contactmanager-messagebroker
    #hostname: messagebroker
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - contactmanager-network
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"

  contacts.db:
    container_name: contactmanager-db
    hostname: mssql
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "1G"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=P@ssw0rd1
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S mssql -U sa -P P@ssw0rd1 -Q 'SELECT 1' -C"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - contactmanager-network
    restart: unless-stopped
    ports:
      - "1433:1433"
    volumes:
      - sql-data:/var/opt/mssql

  create-contact.api:
    container_name: create-contact.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      #- ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__Database=Server=mssql;Database=ContactManagerDb;User Id=sa;Password=P@ssw0rd1;Encrypt=False;TrustServerCertificate=True
      - MessageBroker__Host=messagebroker
      - MessageBroker__UserName=guest
      - MessageBroker__Password=guest
    depends_on:
      messagebroker:
        condition: service_healthy
      contacts.db:
        condition: service_healthy
    networks:
      - contactmanager-network
    restart: unless-stopped
    ports:
      - "6002:8080"
      #- "6062:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  contactmanager.prometheus:
    container_name: contactmanager.prometheus
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - contactmanager-network

  contactmanager.grafana:
    container_name: contactmanager.grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - contactmanager-network

networks:
  contactmanager-network:
    driver: bridge

volumes:
  sql-data:
  prometheus-data:
  grafana-data: